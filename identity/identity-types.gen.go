// Package identity provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.3 DO NOT EDIT.
package identity

const (
	BasicAuthScopes  = "basicAuth.Scopes"
	BearerAuthScopes = "bearerAuth.Scopes"
)

// CoreGetAssignedAdministrativeRights defines model for CoreGetAssignedAdministrativeRights.
type CoreGetAssignedAdministrativeRights struct {
	// Error Error message text on failure, may be null
	Error *map[string]interface{} `json:"Error,omitempty"`

	// Result Return object for a successful API call.
	Result *struct {
		// ErrorCode Error code if any error is received from the API. By default it is 'null'
		ErrorCode *string `json:"ErrorCode,omitempty"`

		// ErrorID Error ID if any error is received from the API. By default it is 'null'
		ErrorID *string `json:"ErrorID,omitempty"`

		// Exception Exception message if any exception is received from the API. By default it is 'null'
		Exception *string `json:"Exception,omitempty"`

		// InnerExceptions Inner Exceptions if any received from the API. By default it is 'null'
		InnerExceptions *string `json:"InnerExceptions,omitempty"`

		// IsSoftError SoftError if true indicates this is not actually an exception but an UI warning popup
		IsSoftError *bool `json:"IsSoftError,omitempty"`

		// Message Error message for failure response. By default it is 'null'
		Message *string `json:"Message,omitempty"`

		// MessageID Message Id for failure response. By default it is 'null'
		MessageID *string `json:"MessageID,omitempty"`

		// Result Result of the assigned administrative rights
		Result *struct {
			// FullCount Total No.of assigned administrative rights
			FullCount *int `json:"FullCount,omitempty"`

			// IsAggregrate Is Aggregrate
			IsAggregrate *string `json:"IsAggregrate,omitempty"`

			// Results Result of the assigned administrative rights
			Results *[]struct {
				// Entities Entities List
				Entities *map[string]interface{} `json:"Entities,omitempty"`

				// Row Description about the administrative member
				Row *struct {
					// Description Description of the right
					Description *string `json:"Description,omitempty"`

					// Path Specified Path of the right
					Path *string `json:"Path,omitempty"`

					// Scope Scope of the right
					Scope *string `json:"Scope,omitempty"`

					// ServiceName ServiceName of the right
					ServiceName *string `json:"ServiceName,omitempty"`
				} `json:"Row,omitempty"`
			} `json:"Results,omitempty"`

			// Columns Information about the administrative rights
			Columns *[]struct {
				// DDTitle Data dictionary title of the column.
				DDTitle *string `json:"DDTitle,omitempty"`

				// DDname Data dictionary name of the column.
				DDname *string `json:"DDname,omitempty"`

				// Description Brief description of the column.
				Description *string `json:"Description,omitempty"`

				// ForeignKey Whether column holds a foreign key.
				ForeignKey *string `json:"ForeignKey,omitempty"`

				// Format Format
				Format *string `json:"Format,omitempty"`

				// IsHidden Whether column is hidden.
				IsHidden *bool `json:"IsHidden,omitempty"`

				// Name Name of the column.
				Name *string `json:"Name,omitempty"`

				// TableKey Whether column is a key(primary or foreign).
				TableKey *string `json:"TableKey,omitempty"`

				// TableName TableName of the column
				TableName *string `json:"TableName,omitempty"`

				// Title Title of the column.
				Title *string `json:"Title,omitempty"`

				// Type Type of data in column
				Type *int `json:"Type,omitempty"`

				// Width Size of the column
				Width *int `json:"Width,omitempty"`
			} `json:"columns,omitempty"`

			// Count Total No.of assigned administrative rights
			Count *int `json:"count,omitempty"`
		} `json:"Result,omitempty"`

		// ReturnID ReturnID for the successful api call
		ReturnID *string `json:"ReturnID,omitempty"`

		// Success The success will be true or false
		Success *bool `json:"success,omitempty"`
	} `json:"Result,omitempty"`
}

// OAuth2Authorize302Errors defines model for OAuth2Authorize_302_errors.
type OAuth2Authorize302Errors struct {
	// Result The API response when invalid authorization request is sent to the server. Note: The response is an HTML response.
	Result *struct {
		// InvalidClientID The client ID sent in the authorization request is invalid.
		//
		//  <b>Example :</b>
		// Object moved to <redirect_uri>?error=invalid_client&amp;error_description=invalid%20client%20creds
		InvalidClientID *string `json:"Invalid client ID,omitempty"`

		// UnknownApplicationID The scopes sent in the authorization request are not part of authorized scopes.
		//
		// <b>Example:</b>
		// Object moved to <redirect_uri>?error=invalid_request&amp;error_description=unknown%20app%20123
		UnknownApplicationID *string `json:"Unknown application ID,omitempty"`

		// UnknownScopesRequested The scopes sent in the authorization request are not part of authorized scopes.
		//
		// <b>Example:</b>
		// Object moved to <redirect_uri>/v1/callback?error=invalid_scope&amp;error_description=unknown%20scope%20requested
		UnknownScopesRequested *string `json:"Unknown scopes requested,omitempty"`
	} `json:"Result,omitempty"`
}

// OAuth2Authorize400Errors defines model for OAuth2Authorize_400_errors.
type OAuth2Authorize400Errors struct {
	// Result The API response when invalid authorization request is sent to the server.
	Result *struct {
		// InvalidPrompt The prompt parameter sent in the authorization request is not supported by CyberArk Identity,
		//
		//    <b>Example:</b>
		//    "error": "unsupported_prompt",
		//    "error_description": "Unsupported prompt value: 'consent'.  Supported prompt values: 'none' and 'login'."
		InvalidPrompt *string `json:"Invalid prompt,omitempty"`

		// InvalidRedirectURI The redirect URI sent in the request is not part of the authorized redirect URI list.
		//
		//    <b>Example:</b>
		//    "error": "invalid_request",
		//    "error_description": "invalid redirect"
		InvalidRedirectURI *string `json:"Invalid redirect URI,omitempty"`

		// InvalidResponseType The response type sent in the authorization request is invalid.
		//
		//    <b>Example:</b>
		//    "error": "unsupported_response_type",
		//    "error_description": "invalid response_type: id"
		InvalidResponseType *string `json:"Invalid response type,omitempty"`
	} `json:"Result,omitempty"`
}

// OAuth2Authorize500Errors defines model for OAuth2Authorize_500_errors.
type OAuth2Authorize500Errors struct {
	// Result The API response when authorization request is sent to the server.
	Result *struct {
		// IncorrectRedirectURIFormat The redirect URI sent in the authorization request is not in the correct HTTPS format Ex: redirect URI is of the format 'abc'.
		//
		//  <b>Example:</b>
		//  "error": "invalid_request",
		//  "error_description": "Invalid URI: The format of the URI could not be determined."
		IncorrectRedirectURIFormat *string `json:"Incorrect redirect URI format,omitempty"`

		// ResponseTypeMissing The response type is not sent in the authorization request.
		//
		//  <b>Example:</b>
		//  "error": "invalid_request",
		//  "error_description": "missing response_type"
		ResponseTypeMissing *string `json:"Response type missing,omitempty"`
	} `json:"Result,omitempty"`
}

// OAuth2AuthorizeAuthenticatedResponse defines model for OAuth2Authorize_authenticatedResponse.
type OAuth2AuthorizeAuthenticatedResponse struct {
	// Result The API response when user is authenticated. <b>Note:</b> The API response varies based on the response type. For more information refer  <a href="https://identity-developer.cyberark.com/docs/about-openid-connect">OpenID Connect</a>. Note: The response is an HTML response.
	Result *struct {
		// AuthenticatedResponse If the user is authenticated, then the user is redirected to the redirect URI along with the authorization code or tokens.
		// <b> Example: </b>
		//
		// If response type is 'code' then the response is as below:
		// Object moved to <redirect_uri>?state=abc&amp;responseType=code&amp;code=fBkN...
		//
		// If the response type is 'code token' then the response is as below:
		// Object moved to <redirect_uri>#state=abc&amp;responseType=code%2C%20token&amp;code=Cfp2...&amp;access_token=eyJhb...&amp;token_type=Bearer&amp;expires_in=18000&amp;scope=openid%20profile"
		AuthenticatedResponse *string `json:"authenticated_response,omitempty"`
	} `json:"Result,omitempty"`
}

// OAuth2AuthorizeUnauthenticatedResponse defines model for OAuth2Authorize_unauthenticatedResponse.
type OAuth2AuthorizeUnauthenticatedResponse struct {
	// Result The API response when user is not authenticated. Note: The response is an HTML response.
	Result *struct {
		// UnauthenticatedResponse If the user is not authenticated, then response contains HTML with a
		// bounce URL to a login page where user needs to provide credentials for
		// authentication.
		//
		// <b>Example:</b>
		// Object moved to "/login?cloudRedirect=Oauth2%2FAuthorize%2Ftest%3Fbounce%3D_aY04VXKTVO1mUsK5RZt55o2y5i52HpHgyt4cQmh0qA1"
		UnauthenticatedResponse *string `json:"unauthenticated_response,omitempty"`
	} `json:"Result,omitempty"`
}

// OAuth2Confirm defines model for OAuth2Confirm.
type OAuth2Confirm struct {
	// Consent The user will be redirected to the redirect URI after the user consent is saved.
	//
	// <b> Example: </b>
	//
	// If the user has denied the consent the redirect URI will be <redirect_uri>?error=access_denied&error_description=User%20denied%20confirmation
	//
	// On approving the consent, the user will be redirected to the redirect URI with authorization code or tokens depending on response_type
	// Ex: <redirect_uri>?state=123abc&responseType=code&code=yovIWA...
	Consent *string `json:"Consent,omitempty"`
}

// OAuth2Confirm500Errors defines model for OAuth2Confirm_500_errors.
type OAuth2Confirm500Errors struct {
	// Result The API response when invalid request is sent to the server.
	Result *struct {
		// BounceParameterMissing The bounce value is not sent in the authorization request.
		//
		//  "error": "500",
		//  "error_description": "String reference not set to an instance of a String.\r\nParameter name: s"
		BounceParameterMissing *string `json:"Bounce parameter missing,omitempty"`

		// IncorrectBounceValue The bounce value sent in the request is incorrect.
		//
		//  <b>Example:</b>
		//  "error": "500",
		//  "error_description": "State not found for type OAuthBounce, key oRun..."
		IncorrectBounceValue *string `json:"Incorrect bounce value,omitempty"`
	} `json:"Result,omitempty"`
}

// OAuth2EndSession defines model for OAuth2EndSession.
type OAuth2EndSession struct {
	// Result The user will be redirected to the post logout URI along with the state query parameter if specified. Else the user is redirected to the user portal
	Result *string `json:"Result,omitempty"`
}

// OAuth2GetMeta defines model for OAuth2GetMeta.
type OAuth2GetMeta struct {
	// Result The API response contains the <a href="https://identity-developer.cyberark.com/docs/about-openid-connect#openid-connect-metadata">  OpenID connect provider metadata </a>. the OP metadata can be requested using <tenant_url>/<application_id>/.well-known/openid-configuration.
	Result *map[string]interface{} `json:"Result,omitempty"`
}

// OAuth2GetMeta400Errors defines model for OAuth2GetMeta_400_errors.
type OAuth2GetMeta400Errors struct {
	// Result The API response when invalid request is sent to the server.
	Result *struct {
		// ApplicationIDIncorrect The error is observed if application ID is not sent or if incorrect value is sent as the query parameter.
		//
		//    <b>Example:</b>
		//    "error": "invalid_request",
		//    "error_description": "unknown app"
		ApplicationIDIncorrect *string `json:"Application ID incorrect,omitempty"`
	} `json:"Result,omitempty"`
}

// OAuth2Introspect400Errors defines model for OAuth2Introspect_400_errors.
type OAuth2Introspect400Errors struct {
	// Result The API response when invalid request is sent to the server.
	Result *struct {
		// InvalidApplicationID The error is seen when the application ID sent in the API request is incorrect.
		//
		//    <b>Example:</b>
		//    "error": "invalid_request",
		//    "error_description": "unknown app 123"
		InvalidApplicationID *string `json:"Invalid application ID,omitempty"`

		// MissingToken The error is seen when the token is not sent in the API request.
		//
		//    <b>Example:</b>
		//    "error": "invalid_request",
		//    "error_description": "missing token in request"
		//
		MissingToken *string `json:"Missing token,omitempty"`

		// UnauthenticatedRequest The error is seen when the user who sent the API request is not authenticated.
		//
		//    <b>Example:</b>
		//    "error": "access_denied",
		//    "error_description": "requesting user not authenticated"
		UnauthenticatedRequest *string `json:"Unauthenticated request,omitempty"`
	} `json:"Result,omitempty"`
}

// OAuth2IntrospectTokenActive defines model for OAuth2Introspect_tokenActive.
type OAuth2IntrospectTokenActive struct {
	// Result The API response when the token is active. Please refer to <a href="https://identity-developer.cyberark.com/docs/tokens">  https://identity-developer.cyberark.com/docs/tokens </a> for more information on the response fields.
	Result *struct {
		// Active The active field in the response indicates if the token is currently active or not. Value is true
		Active *bool `json:"active,omitempty"`

		// AppId It is the unique id of the application configured.
		AppId *string `json:"app_id,omitempty"`

		// Aud The audience of the token.
		Aud *string `json:"aud,omitempty"`

		// AuthTime It is the time in seconds when authentication was made.
		AuthTime *string `json:"auth_time,omitempty"`

		// Exp The expiration time of the token in seconds.
		Exp *string `json:"exp,omitempty"`

		// Iat The issuing time of the token in seconds.
		Iat *string `json:"iat,omitempty"`

		// Iss The issuer of the token.
		Iss *string `json:"iss,omitempty"`

		// Scope A space-delimited list of scopes.
		Scope *string `json:"scope,omitempty"`

		// Sub The subject of the token.
		Sub *string `json:"sub,omitempty"`

		// UniqueName It is the username or client id.
		UniqueName *string `json:"unique_name,omitempty"`
	} `json:"Result,omitempty"`
}

// OAuth2IntrospectTokenInactive defines model for OAuth2Introspect_tokenInactive.
type OAuth2IntrospectTokenInactive struct {
	// Result The API response when the token is inactive.
	Result *struct {
		// Active The active field in the response indicates if the token is currently active or not. Value is false.
		Active *bool `json:"active,omitempty"`
	} `json:"Result,omitempty"`
}

// OAuth2Keys defines model for OAuth2Keys.
type OAuth2Keys struct {
	// Result The JWT keys used to sign the ID and the access tokens.   These keys should be used by the client application to verify the signature of the tokens.
	Result *[]struct {
		// Alg The algorithm of the key.
		Alg *string `json:"alg,omitempty"`

		// Kid The thumbprint of key.
		Kid *string `json:"kid,omitempty"`

		// Kty The type of JWT key.
		Kty *string `json:"kty,omitempty"`

		// Use The use of key.
		Use *string `json:"use,omitempty"`
	} `json:"Result,omitempty"`
}

// OAuth2Keys400Errors defines model for OAuth2Keys_400_errors.
type OAuth2Keys400Errors struct {
	// Result The API response when invalid request is sent to the server.
	Result *struct {
		// InvalidApplicationID The error is seen when the application ID sent in the API request is incorrect.
		//
		//    <b>Example:</b>
		//    "error": "invalid_request",
		//    "error_description": "unknown app 123"
		InvalidApplicationID *string `json:"Invalid application ID,omitempty"`

		// InvalidRequest The error is when the API URL doesn't have application ID as part of it. ex: {tenant_url}/OAuth2/Keys
		//
		//    <b>Example:</b>
		//    "error": "invalid_request",
		//    "error_description": "bad URL"
		//
		InvalidRequest *string `json:"Invalid request,omitempty"`
	} `json:"Result,omitempty"`
}

// OAuth2Revoke defines model for OAuth2Revoke.
type OAuth2Revoke struct {
	// Result The authorization server responds with HTTP status code 200 if the token has been revoked successfully or the client submitted an invalid token.  Note: invalid tokens do not cause an error response since the client cannot reasonably handle such an error.  Moreover, the purpose of the revocation request, invalidating the particular token, is already achieved.
	Result *string `json:"Result,omitempty"`
}

// OAuth2Revoke400Errors defines model for OAuth2Revoke_400_errors.
type OAuth2Revoke400Errors struct {
	// Result The API response when invalid request is sent to the server.
	Result *struct {
		// MissingToken The error is seen token is missing in the API request.
		//
		//    <b>Example:</b>
		//    "error": "invalid_request",
		//    "error_description": "missing token"
		//
		MissingToken *string `json:"Missing token,omitempty"`
	} `json:"Result,omitempty"`
}

// OAuth2Token defines model for OAuth2Token.
type OAuth2Token struct {
	// Result The API response for a successful API request.
	Result *struct {
		// AccessToken Access token that defines the client applications access to protected resources.
		AccessToken *string `json:"access_token,omitempty"`

		// ExpiresIn The expiry date of the access and ID tokens
		ExpiresIn *int `json:"expires_in,omitempty"`

		// IdToken The ID token that gives claims information of the user
		IdToken *string `json:"id_token,omitempty"`

		// RefreshToken The refresh token can be used to generate new access tokens.
		RefreshToken *string `json:"refresh_token,omitempty"`

		// Scope The scopes of the token. These scopes are sent in the authorization request.
		Scope *string `json:"scope,omitempty"`

		// State The client should use the content of this parameter to make sure the Code it received matches the authorization request it sent.
		State *string `json:"state,omitempty"`

		// TokenType The type of token.
		TokenType *string `json:"token_type,omitempty"`
	} `json:"Result,omitempty"`
}

// OAuth2Token400Errors defines model for OAuth2Token_400_errors.
type OAuth2Token400Errors struct {
	// Result The API response when invalid request is sent to the server.
	Result *struct {
		// InvalidAuthorizationCode The error is seen when the authorization code sent in the API request is invalid.
		//
		//    <b>Example:</b>
		//    "error": "invalid_grant",
		//    "error_description": "supplied code does not match known request"
		InvalidAuthorizationCode *string `json:"Invalid authorization code,omitempty"`

		// InvalidClientID The error is seen when the client ID is missing in the API request.
		//
		//    <b>Example:</b>
		//    "error": "invalid_client",
		//    "error_description": "wrong clientid"
		InvalidClientID *string `json:"Invalid client ID,omitempty"`

		// InvalidGrantType The error is seen when the grant type is invalid.
		//
		//    <b>Example:</b>
		//    "error": "invalid_grant",
		//    "error_description": "invalid grant type"
		InvalidGrantType *string `json:"Invalid grant type,omitempty"`

		// MismatchedRedirectURI The error is seen when the redirect URI sent in the token request is not part of the authorized redirects.
		//
		//    <b>Example:</b>
		//    "error": "invalid_request",
		//    "error_description": "mismatched redirect"
		//
		MismatchedRedirectURI *string `json:"Mismatched redirect URI,omitempty"`
	} `json:"Result,omitempty"`
}

// OAuth2UserInfo defines model for OAuth2UserInfo.
type OAuth2UserInfo struct {
	// Result Successful API response
	Result *struct {
		// Success A boolean flag that specifies if the API request is successful or not
		Success *bool `json:"Success,omitempty"`

		// Aud Audience of the token
		Aud *string `json:"aud,omitempty"`

		// AuthTime The time at which the user is authenticated
		AuthTime *string `json:"auth_time,omitempty"`

		// Email Email of the user
		Email *string `json:"email,omitempty"`

		// EmailVerified A boolean flag that specifies if the users email is verified or not.
		EmailVerified *bool `json:"email_verified,omitempty"`

		// FamilyName Family name of the user.
		FamilyName *string `json:"family_name,omitempty"`

		// GivenName Given name of the user
		GivenName *int `json:"given_name,omitempty"`

		// Name User name
		Name *string `json:"name,omitempty"`

		// PreferredUsername Preferred user name
		PreferredUsername *string `json:"preferred_username,omitempty"`

		// Sub Subject Identifier. A locally unique and never reassigned identifier within the issuer for the End-User, which is intended to be consumed by the client
		Sub *string `json:"sub,omitempty"`

		// UniqueName unique name of the user
		UniqueName *string `json:"unique_name,omitempty"`
	} `json:"Result,omitempty"`
}

// OAuth2UserInfo400Errors defines model for OAuth2UserInfo_400_errors.
type OAuth2UserInfo400Errors struct {
	// Result The API response when invalid request is sent to the server.
	Result *struct {
		// InvalidURL The error is seen when the API request URL is incorrect.
		//
		//    <b>Example:</b>
		//    "error": "invalid_request",
		//    "error_description": "bad url"
		//
		InvalidURL *string `json:"Invalid URL,omitempty"`

		// InvalidApplicationID The error is seen when the application ID sent is invalid in the API request.
		//
		//    <b>Example:</b>
		//    "error": "invalid_request",
		//    "error_description": "unknown app 123"
		InvalidApplicationID *string `json:"Invalid application ID,omitempty"`

		// InvalidApplicationConfiguration The error is seen when the application ID is missing in the API request.
		//
		//    <b>Example:</b>
		//    "error": "invalid_request",
		//    "error_description": "invalid app configuration"
		InvalidApplicationConfiguration *string `json:"Invalid application configuration,omitempty"`
	} `json:"Result,omitempty"`
}

// RolesAssignSuperRights defines model for RolesAssignSuperRights.
type RolesAssignSuperRights struct {
	// Error Error message text on failure.
	Error *struct {
		// InvalidInputData This error message is displayed when the requested data is not correct. Error message:'The requested data or its dependent data was not found in the service.'
		InvalidInputData *string `json:"Invalid_InputData,omitempty"`

		// InvalidPath This error message is displayed when the given path is not valid. Error message:'Specified path is invalid'
		InvalidPath *string `json:"Invalid_Path,omitempty"`
	} `json:"Error,omitempty"`

	// Result Return object for a successful API call.
	Result *struct {
		// ErrorCode Error code if any error is received from the API. By default it is 'null'
		ErrorCode *string `json:"ErrorCode,omitempty"`

		// ErrorId Error ID if any error is received from the API. By default it is 'null'
		ErrorId *string `json:"ErrorId,omitempty"`

		// Exception Exception message if any exception is received from the API. By default it is 'null'
		Exception *string `json:"Exception,omitempty"`

		// InnerExceptions Inner Exceptions if any received from the API. By default it is 'null'
		InnerExceptions *string `json:"InnerExceptions,omitempty"`

		// IsSoftError SoftError if true indicates this is not actually an exception but an UI warning popup.
		IsSoftError *bool `json:"IsSoftError,omitempty"`

		// Message Error message for failure response. By default it is 'null'
		Message *string `json:"Message,omitempty"`

		// MessageID Message Id for failure response. By default it is 'null'
		MessageID *string `json:"MessageID,omitempty"`

		// Result The result will be null.
		Result *string `json:"Result,omitempty"`

		// Success The success will be true or false.
		Success *bool `json:"success,omitempty"`
	} `json:"Result,omitempty"`
}

// RolesGetRole defines model for RolesGetRole.
type RolesGetRole struct {
	// Error Error message text on failure, may be null
	Error *map[string]interface{} `json:"Error,omitempty"`

	// Result Role information
	Result *struct {
		// Description Role description
		Description *string `json:"Description,omitempty"`

		// DirectoryServiceUuid UUID of the Directory Service owning the role
		DirectoryServiceUuid *string `json:"DirectoryServiceUuid,omitempty"`

		// Name Role name
		Name *string `json:"Name,omitempty"`

		// Principals List of priciapls who are members of the role.  Each principal is of the form t=id, where 't' is one of 'u' (user), 'g' (group), or 'r' (role) and 'id' is the principal name.
		Principals *[]string `json:"Principals,omitempty"`

		// ReadOnly Is role read only?
		ReadOnly *bool `json:"ReadOnly,omitempty"`

		// RoleType Role type, one of Everybody or PrincipalList
		RoleType *string `json:"RoleType,omitempty"`

		// Uuid Role UUID
		Uuid *string `json:"Uuid,omitempty"`
	} `json:"Result,omitempty"`
}

// RolesGetRoleMembers defines model for RolesGetRoleMembers.
type RolesGetRoleMembers struct {
	// Error Error message text on failure.
	Error *struct {
		// InvalidData This error message is displayed when the requested data is not correct. Error message: 'The requested data or its dependent data was not found in the service.'
		InvalidData *string `json:"Invalid_Data,omitempty"`

		// InvalidRole This error message is displayed when the invalid role is provided . Error message: 'Role does not exist'
		InvalidRole *string `json:"Invalid_Role,omitempty"`
	} `json:"Error,omitempty"`

	// Result Return object for a successful API call.
	Result *struct {
		// ErrorCode Error code if any error is received from the API. By default it is 'null'
		ErrorCode *string `json:"ErrorCode,omitempty"`

		// ErrorID Error ID if any error is received from the API. By default it is 'null'
		ErrorID *string `json:"ErrorID,omitempty"`

		// Exception Exception message if any exception is received from the API. By default it is 'null'
		Exception *string `json:"Exception,omitempty"`

		// InnerExceptions Inner Exceptions if any received from the API. By default it is 'null'
		InnerExceptions *string `json:"InnerExceptions,omitempty"`

		// IsSoftError SoftError if true indicates this is not actually an exception but an UI warning popup.
		IsSoftError *bool `json:"IsSoftError,omitempty"`

		// Message Error message for failure response. By default it is 'null'
		Message *string `json:"Message,omitempty"`

		// MessageID Message Id for failure response. By default it is 'null'
		MessageID *string `json:"MessageID,omitempty"`

		// Result Result
		Result *struct {
			// FullCount Total No.of role members
			FullCount *int `json:"FullCount,omitempty"`

			// IsAggregrate Is Aggregrate
			IsAggregrate *string `json:"IsAggregrate,omitempty"`

			// Results Result of the Role Members
			Results *[]struct {
				// Entities Entities List
				Entities *[]struct {
					// IsForeignKey IsForeignKey
					IsForeignKey *bool `json:"IsForeignKey,omitempty"`

					// Key Key
					Key *string `json:"Key,omitempty"`

					// Type Type
					Type *string `json:"type,omitempty"`
				} `json:"Entities,omitempty"`

				// Row Row
				Row *[]struct {
					// Guid Guid of the user
					Guid *string `json:"Guid,omitempty"`

					// IsEffective IsEffective
					IsEffective *bool `json:"IsEffective,omitempty"`

					// Name Name of the user(user@domain)
					Name *string `json:"Name,omitempty"`

					// OrgId Organisation Id of the user
					OrgId *string `json:"OrgId,omitempty"`

					// OrgPath Organisation Path of the user
					OrgPath *string `json:"OrgPath,omitempty"`

					// Type Type of the user
					Type *string `json:"Type,omitempty"`
				} `json:"Row,omitempty"`
			} `json:"Results,omitempty"`

			// ReturnID ReturnID for the successful API
			ReturnID *string `json:"ReturnID,omitempty"`

			// Columns Information about the columns
			Columns *[]struct {
				// DDTitle Data dictionary title of the column.
				DDTitle *string `json:"DDTitle,omitempty"`

				// DDname Data dictionary name of the column.
				DDname *string `json:"DDname,omitempty"`

				// Description Brief description of the column.
				Description *string `json:"Description,omitempty"`

				// ForeignKey Whether column holds a foreign key.
				ForeignKey *string `json:"ForeignKey,omitempty"`

				// Format Format.
				Format *string `json:"Format,omitempty"`

				// IsHidden Whether column is hidden.
				IsHidden *bool `json:"IsHidden,omitempty"`

				// Name Name of the column.
				Name *string `json:"Name,omitempty"`

				// TableKey Whether column is a key(primary or foreign).
				TableKey *string `json:"TableKey,omitempty"`

				// TableName Table Name of the Column.
				TableName *string `json:"TableName,omitempty"`

				// Title Title of the column
				Title *string `json:"Title,omitempty"`

				// Type Type of the data in the column.
				Type *int `json:"Type,omitempty"`

				// Width Size of the column.
				Width *int `json:"Width,omitempty"`
			} `json:"columns,omitempty"`

			// Count Total No. of members associated with role
			Count *int `json:"count,omitempty"`
		} `json:"Result,omitempty"`

		// Success The success will be true or false
		Success *bool `json:"success,omitempty"`
	} `json:"Result,omitempty"`
}

// RolesSetDynamicRoleScript defines model for RolesSetDynamicRoleScript.
type RolesSetDynamicRoleScript struct {
	// Error Error message text on failure, may be null
	Error *map[string]interface{} `json:"Error,omitempty"`

	// Result Return object for a successful API call.
	Result *struct {
		// ErrorCode Error code if any error is received from the API. By default it is 'null'
		ErrorCode *string `json:"ErrorCode,omitempty"`

		// ErrorID Error ID if any error is received from the API. By default it is 'null'
		ErrorID *string `json:"ErrorID,omitempty"`

		// Exception Exception message if any exception is received from the API. By default it is 'null'
		Exception *string `json:"Exception,omitempty"`

		// InnerExceptions InnerExceptions
		InnerExceptions *string `json:"InnerExceptions,omitempty"`

		// IsSoftError SoftError if true indicates this is not actually an exception but an UI warning popup.
		IsSoftError *bool `json:"IsSoftError,omitempty"`

		// Message Error message for failure response. By default it is 'null'
		Message *string `json:"Message,omitempty"`

		// MessageID Message Id for failure response. By default it is 'null'
		MessageID *string `json:"MessageID,omitempty"`

		// Result The result will be null.
		Result *string `json:"Result,omitempty"`

		// Success The success will be true or false.
		Success *bool `json:"success,omitempty"`
	} `json:"Result,omitempty"`
}

// RolesStoreRole Return object for an API call.
type RolesStoreRole struct {
	// ErrorCode Error code if any error is received from the API. By default it is 'null'.
	ErrorCode *string `json:"ErrorCode,omitempty"`

	// ErrorID Error ID if any error is received from the API. By default it is 'null'.
	ErrorID *string `json:"ErrorID,omitempty"`

	// Exception Exception message if any exception is received from the API. By default it is 'null'.
	Exception *string `json:"Exception,omitempty"`

	// InnerExceptions Inner Exceptions if any received from the API. By default it is 'null'.
	InnerExceptions *string `json:"InnerExceptions,omitempty"`

	// IsSoftError SoftError.
	IsSoftError *bool `json:"IsSoftError,omitempty"`

	// Message Error message for failure response. By default it is 'null'.
	Message *string `json:"Message,omitempty"`

	// MessageID Message Id for failure response. By default it is 'null'.
	MessageID *string `json:"MessageID,omitempty"`

	// Result The result for the API call.
	Result *struct {
		// Rowkey Unique Id of the Role
		Rowkey *string `json:"_Rowkey,omitempty"`
	} `json:"Result,omitempty"`

	// Success It will be true for a successful API call.
	Success *bool `json:"success,omitempty"`
}

// RolesTestDynamicRoleScript defines model for RolesTestDynamicRoleScript.
type RolesTestDynamicRoleScript struct {
	// Error Error message text on failure, may be null
	Error *map[string]interface{} `json:"Error,omitempty"`

	// Result Return object for a successful API call.
	Result *struct {
		// ErrorCode Error code if any error is received from the API. By default it is 'null'
		ErrorCode *string `json:"ErrorCode,omitempty"`

		// ErrorID Error ID if any error is received from the API. By default it is 'null'
		ErrorID *string `json:"ErrorID,omitempty"`

		// Exception Exception message if any exception is received from the API. By default it is 'null'
		Exception *string `json:"Exception,omitempty"`

		// InnerExceptions InnerExceptions
		InnerExceptions *string `json:"InnerExceptions,omitempty"`

		// IsSoftError SoftError if true indicates this is not actually an exception but an UI warning popup.
		IsSoftError *bool `json:"IsSoftError,omitempty"`

		// Message Error message for failure response. By default it is 'null'
		Message *string `json:"Message,omitempty"`

		// MessageID Message Id for failure response. By default it is 'null'
		MessageID *string `json:"MessageID,omitempty"`

		// Result Result details
		Result *struct {
			// CompileSuccess Whether the execution of the script is successful. By default it is false.
			CompileSuccess *bool `json:"CompileSuccess,omitempty"`

			// Errors Exception Message. By default it is 'null'.
			Errors *string `json:"Errors,omitempty"`

			// Result Evaluated Result. By default it is 'null'.
			Result *bool `json:"Result,omitempty"`

			// Trace Logs. By default it is an empty list.
			Trace *[]interface{} `json:"Trace,omitempty"`
		} `json:"Result,omitempty"`

		// Success The success will be true or false.
		Success *bool `json:"success,omitempty"`
	} `json:"Result,omitempty"`
}

// RolesUnAssignSuperRights defines model for RolesUnAssignSuperRights.
type RolesUnAssignSuperRights struct {
	// Error Error message text on failure.
	Error *struct {
		// InvalidInputData This error message is displayed when the requested data is not correct. Error message:'The requested data or its dependent data was not found in the service.'
		InvalidInputData *string `json:"Invalid_InputData,omitempty"`

		// InvalidPath This error message is displayed when the given path is not valid. Error message:'Specified path is invalid'
		InvalidPath *string `json:"Invalid_Path,omitempty"`
	} `json:"Error,omitempty"`

	// Result Return object for a successful API call.
	Result *struct {
		// ErrorCode Error code if any error is received from the API. By default it is 'null'
		ErrorCode *string `json:"ErrorCode,omitempty"`

		// ErrorId Error ID if any error is received from the API. By default it is 'null'
		ErrorId *string `json:"ErrorId,omitempty"`

		// Exception Exception message if any exception is received from the API. By default it is 'null'
		Exception *string `json:"Exception,omitempty"`

		// InnerExceptions Inner Exceptions if any received from the API. By default it is 'null'
		InnerExceptions *string `json:"InnerExceptions,omitempty"`

		// IsSoftError SoftError if true indicates this is not actually an exception but an UI warning popup.
		IsSoftError *bool `json:"IsSoftError,omitempty"`

		// Message Error message for failure response. By default it is 'null'
		Message *string `json:"Message,omitempty"`

		// MessageID Message Id for failure response. By default it is 'null'
		MessageID *string `json:"MessageID,omitempty"`

		// Result The result will be null.
		Result *string `json:"Result,omitempty"`

		// Success The success will be true or false.
		Success *bool `json:"success,omitempty"`
	} `json:"Result,omitempty"`
}

// SaasManageAddUsersAndGroupsToRole defines model for SaasManageAddUsersAndGroupsToRole.
type SaasManageAddUsersAndGroupsToRole struct {
	// Error Error message text on failure. Below message would be returned if requested data is invalid.
	Error *struct {
		// InvalidInputData This error message is displayed when the given role is not valid. Error message:'The requested data or its dependent data was not found in the service.'
		InvalidInputData *string `json:"Invalid_InputData,omitempty"`
	} `json:"Error,omitempty"`

	// Result Return object for a successful API call.
	Result *struct {
		// ErrorCode Error code if any error is received from the API. By default it is 'null'
		ErrorCode *string `json:"ErrorCode,omitempty"`

		// ErrorId Error ID if any error is received from the API. By default it is 'null'
		ErrorId *string `json:"ErrorId,omitempty"`

		// Exception Exception message if any exception is received from the API. By default it is 'null'
		Exception *string `json:"Exception,omitempty"`

		// InnerExceptions Inner Exceptions if any received from the API. By default it is 'null'
		InnerExceptions *string `json:"InnerExceptions,omitempty"`

		// IsSoftError SoftError if true indicates this is not actually an exception but an UI warning popup.
		IsSoftError *bool `json:"IsSoftError,omitempty"`

		// Message Error message for failure response. By default it is 'null'
		Message *string `json:"Message,omitempty"`

		// MessageID Message Id for failure response. By default it is 'null'
		MessageID *string `json:"MessageID,omitempty"`

		// Result The result will be null.
		Result *string `json:"Result,omitempty"`

		// Success The success will be true or false.
		Success *bool `json:"success,omitempty"`
	} `json:"Result,omitempty"`
}

// SaasManageDeleteRoles defines model for SaasManageDeleteRoles.
type SaasManageDeleteRoles struct {
	// Error Error message text on failure, may be null
	Error *map[string]interface{} `json:"Error,omitempty"`

	// Result Return object for a successful API call.
	Result *struct {
		// ErrorCode Error code if any error is received from the API. By default it is 'null'
		ErrorCode *string `json:"ErrorCode,omitempty"`

		// ErrorID Error ID if any error is received from the API. By default it is 'null'
		ErrorID *string `json:"ErrorID,omitempty"`

		// Exception Exception message if any exception is received from the API. By default it is 'null'
		Exception *string `json:"Exception,omitempty"`

		// InnerExceptions Inner Exceptions if any received from the API. By default it is 'null'
		InnerExceptions *string `json:"InnerExceptions,omitempty"`

		// IsSoftError SoftError if true indicates this is not actually an exception but an UI warning popup.
		IsSoftError *bool `json:"IsSoftError,omitempty"`

		// Message Error message for failure response. By default it is 'null'
		Message *string `json:"Message,omitempty"`

		// MessageID Message Id for failure response. By default it is 'null'
		MessageID *string `json:"MessageID,omitempty"`

		// Result The result will be 'null'.
		Result *string `json:"Result,omitempty"`

		// Success The success will be true or false.
		Success *bool `json:"success,omitempty"`
	} `json:"Result,omitempty"`
}

// SaasManageGetRoleApps defines model for SaasManageGetRoleApps.
type SaasManageGetRoleApps struct {
	// Error Error message text on failure. Below message would be returned if requested data is invalid.
	Error *struct {
		// InvalidInputData This error message is displayed when the Role with given UUID was not found. Error message:'The requested data or its dependent data was not found in the service.'
		InvalidInputData *string `json:"Invalid_InputData,omitempty"`
	} `json:"Error,omitempty"`

	// Result Return object for a successful API call.
	Result *struct {
		// ErrorCode Error code if any error is received from the API. By default it is 'null'
		ErrorCode *string `json:"ErrorCode,omitempty"`

		// ErrorID Error ID if any error is received from the API. By default it is 'null'
		ErrorID *string `json:"ErrorID,omitempty"`

		// Exception Exception message if any exception is received from the API. By default it is 'null'
		Exception *string `json:"Exception,omitempty"`

		// InnerExceptions Inner Exceptions if any received from the API. By default it is 'null'
		InnerExceptions *string `json:"InnerExceptions,omitempty"`

		// IsSoftError SoftError if true indicates this is not actually an exception but an UI warning popup.
		IsSoftError *bool `json:"IsSoftError,omitempty"`

		// Message Error message for failure response. By default it is 'null'
		Message *string `json:"Message,omitempty"`

		// MessageID Message Id for failure response. By default it is 'null'
		MessageID *string `json:"MessageID,omitempty"`

		// Result Result
		Result *struct {
			// FullCount Total No. of web app Id's
			FullCount *int `json:"FullCount,omitempty"`

			// IsAggregrate Is Aggregrate
			IsAggregrate *string `json:"IsAggregrate,omitempty"`

			// Results Result of the web apps
			Results *[]struct {
				// Entities List of Web Apps
				Entities *map[string]interface{} `json:"Entities,omitempty"`

				// Row Information about the Role Web Application Associated with a role
				Row *struct {
					// AppType Type of the app
					AppType *string `json:"AppType,omitempty"`

					// AppTypeDisplayName Type of the app display name
					AppTypeDisplayName *string `json:"AppTypeDisplayName,omitempty"`

					// Description Description for the app usage
					Description *string `json:"Description,omitempty"`

					// ID ID of the app
					ID *string `json:"ID,omitempty"`

					// Icon Path of the icons specified
					Icon *string `json:"Icon,omitempty"`

					// IsMarketplaceApp IsMarketplaceApp
					IsMarketplaceApp *bool `json:"IsMarketplaceApp,omitempty"`

					// Name Name of the webapp
					Name *string `json:"Name,omitempty"`

					// Version Version
					Version *string `json:"Version,omitempty"`
				} `json:"Row,omitempty"`
			} `json:"Results,omitempty"`

			// ReturnID ReturnID for the successful API
			ReturnID *string `json:"ReturnID,omitempty"`

			// Columns columns
			Columns *[]struct {
				// DDTitle Data dictionary title of the column.
				DDTitle *string `json:"DDTitle,omitempty"`

				// DDname Data dictionary name of the column.
				DDname *string `json:"DDname,omitempty"`

				// Description Brief description of the column.
				Description *string `json:"Description,omitempty"`

				// ForeignKey Whether column holds a foreign key.
				ForeignKey *string `json:"ForeignKey,omitempty"`

				// Format Format
				Format *string `json:"Format,omitempty"`

				// IsHidden Whether column is hidden.
				IsHidden *bool `json:"IsHidden,omitempty"`

				// Name Name of the column.
				Name *string `json:"Name,omitempty"`

				// TableKey Whether column is a key(primary or foreign).
				TableKey *string `json:"TableKey,omitempty"`

				// TableName TableName of the column
				TableName *string `json:"TableName,omitempty"`

				// Title Title of the column
				Title *string `json:"Title,omitempty"`

				// Type Type of data in the column
				Type *int `json:"Type,omitempty"`

				// Width Size of the column
				Width *int `json:"Width,omitempty"`
			} `json:"columns,omitempty"`

			// Count Total No. of role web app Id's
			Count *int `json:"count,omitempty"`
		} `json:"Result,omitempty"`

		// Success The success will be true or false
		Success *bool `json:"success,omitempty"`
	} `json:"Result,omitempty"`
}

// SaasManageRemoveUsersAndGroupsFromRole defines model for SaasManageRemoveUsersAndGroupsFromRole.
type SaasManageRemoveUsersAndGroupsFromRole struct {
	// Error Error message text on failure. Below message would be returned if requested data is invalid.
	Error *struct {
		// InvalidInputData This error message is displayed when the Role with given UUID was not found. Error message:'The requested data or its dependent data was not found in the service.'
		InvalidInputData *string `json:"Invalid_InputData,omitempty"`
	} `json:"Error,omitempty"`

	// Result Return object for a successful API call.
	Result *struct {
		// ErrorCode Error code if any error is received from the API. By default it is 'null'
		ErrorCode *string `json:"ErrorCode,omitempty"`

		// ErrorId Error ID if any error is received from the API. By default it is 'null'
		ErrorId *string `json:"ErrorId,omitempty"`

		// Exception Exception message if any exception is received from the API. By default it is 'null'
		Exception *string `json:"Exception,omitempty"`

		// InnerExceptions Inner Exceptions if any received from the API. By default it is 'null'
		InnerExceptions *string `json:"InnerExceptions,omitempty"`

		// IsSoftError SoftError if true indicates this is not actually an exception but an UI warning popup.
		IsSoftError *bool `json:"IsSoftError,omitempty"`

		// Message Error message for failure response. By default it is 'null'
		Message *string `json:"Message,omitempty"`

		// MessageID Message Id for failure response. By default it is 'null'
		MessageID *string `json:"MessageID,omitempty"`

		// Result The result will be null.
		Result *string `json:"Result,omitempty"`

		// Success The success will be true or false.
		Success *bool `json:"success,omitempty"`
	} `json:"Result,omitempty"`
}

// SecurityAdvanceAuthentication defines model for SecurityAdvanceAuthentication.
type SecurityAdvanceAuthentication struct {
	ErrorCode       *string `json:"ErrorCode,omitempty"`
	ErrorID         *string `json:"ErrorID,omitempty"`
	Exception       *string `json:"Exception,omitempty"`
	InnerExceptions *string `json:"InnerExceptions,omitempty"`
	IsSoftError     *bool   `json:"IsSoftError,omitempty"`
	Message         *string `json:"Message,omitempty"`
	MessageID       *string `json:"MessageID,omitempty"`
	Result          *struct {
		Auth          *string `json:"Auth,omitempty"`
		AuthLevel     *string `json:"AuthLevel,omitempty"`
		CustomerID    *string `json:"CustomerID,omitempty"`
		DisplayName   *string `json:"DisplayName,omitempty"`
		EmailAddress  *string `json:"EmailAddress,omitempty"`
		PodFqdn       *string `json:"PodFqdn,omitempty"`
		SourceDsType  *string `json:"SourceDsType,omitempty"`
		Summary       *string `json:"Summary,omitempty"`
		SystemID      *string `json:"SystemID,omitempty"`
		Token         *string `json:"Token,omitempty"`
		User          *string `json:"User,omitempty"`
		UserDirectory *string `json:"UserDirectory,omitempty"`
		UserId        *string `json:"UserId,omitempty"`
	} `json:"Result,omitempty"`
	Success *bool `json:"success,omitempty"`
}

// SecurityAdvanceForgotUsername defines model for SecurityAdvanceForgotUsername.
type SecurityAdvanceForgotUsername struct {
	// Error Error message text on failure, below message would be returned if provided body arguments are empty/invalid
	Error *struct {
		// ErrorMessage Authentication (login or challenge) has failed. Please try again or contact your system administrator.
		ErrorMessage *string `json:"ErrorMessage,omitempty"`
	} `json:"Error,omitempty"`

	// Result Return object for a successful API call
	Result *struct {
		// ErrorCode Error code if any error is received from the API. By default, it is 'null'
		ErrorCode *string `json:"ErrorCode,omitempty"`

		// ErrorID Error ID if any error is received from the API. By default, it is 'null'
		ErrorID *string `json:"ErrorID,omitempty"`

		// Exception Exception message if an exception is received from the API. By default, it is 'null'
		Exception *string `json:"Exception,omitempty"`

		// InnerExceptions Inner Exceptions if any received from the API. By default, it is 'null'
		InnerExceptions *string `json:"InnerExceptions,omitempty"`

		// IsSoftError SoftError if true indicates this is not an exception but a UI warning popup
		IsSoftError *bool `json:"IsSoftError,omitempty"`

		// Message Error message for failure response. By default it is 'null'
		Message *string `json:"Message,omitempty"`

		// MessageID Message Id for failure response. By default it is 'null'
		MessageID *string `json:"MessageID,omitempty"`

		// Result Information about action taken (username has been sent to provided email address)
		Result *struct {
			// ClientMessage Information that an email with your username has been sent to the email address provided in request body
			ClientMessage *string `json:"ClientMessage,omitempty"`

			// Summary Result summary
			Summary *string `json:"Summary,omitempty"`
		} `json:"Result,omitempty"`

		// Success It will be true for a successful API call
		Success *bool `json:"success,omitempty"`
	} `json:"Result,omitempty"`
}

// SecurityAnswerOOBChallenge defines model for SecurityAnswerOOBChallenge.
type SecurityAnswerOOBChallenge struct {
	// Error Error message text on failure, may be null
	Error *map[string]interface{} `json:"Error,omitempty"`

	// Result Redirect to answer challenge page.
	Result *map[string]interface{} `json:"Result,omitempty"`
}

// SecurityChallengeUser defines model for SecurityChallengeUser.
type SecurityChallengeUser struct {
	// Error Below is the list of errors received by the API.
	Error *struct {
		// AuthCookie AThreadDescriptor AuthCookie is null
		AuthCookie *string `json:"AuthCookie,omitempty"`

		// InvalidArguments Invalid arguments passed to the server.
		InvalidArguments *string `json:"InvalidArguments,omitempty"`

		// InvalidProfileName The profile name cannot be identified by the CyberArk Identity.
		InvalidProfileName *string `json:"InvalidProfileName,omitempty"`

		// NullArguments Unexpected null arguments passed to the server.
		NullArguments *string `json:"NullArguments,omitempty"`
	} `json:"Error,omitempty"`

	// Result Below is the response structure if the API request is successful.
	Result *struct {
		// ErrorCode ErrorID
		ErrorCode *string `json:"ErrorCode,omitempty"`

		// ErrorID ErrorID
		ErrorID *string `json:"ErrorID,omitempty"`

		// InnerExceptions ErrorID
		InnerExceptions *string `json:"InnerExceptions,omitempty"`

		// IsSoftError ErrorID
		IsSoftError *string `json:"IsSoftError,omitempty"`

		// Message Message
		Message *string `json:"Message,omitempty"`

		// MessageID MessageID
		MessageID *string `json:"MessageID,omitempty"`

		// Result The result received from the Identity cloud.
		Result *struct {
			// ChallengeId This is a random generated ID that is used to identify the challenge (Authentication profile) uniquely.
			ChallengeId *string `json:"ChallengeId,omitempty"`
		} `json:"Result,omitempty"`

		// Success Success
		Success *bool `json:"success,omitempty"`
	} `json:"Result,omitempty"`
}

// SecurityLogout defines model for SecurityLogout.
type SecurityLogout struct {
	// Error Error message text on failure, may be null
	Error *map[string]interface{} `json:"Error,omitempty"`

	// Result Return object for a successful API call.
	Result *struct {
		// ErrorCode Error code if any error is received from the API. By default it is 'null'
		ErrorCode *string `json:"ErrorCode,omitempty"`

		// ErrorID Error ID if any error is received from the API. By default it is 'null'
		ErrorID *string `json:"ErrorID,omitempty"`

		// Exception Exception message if any exception is received from the API. By default it is 'null'
		Exception *string `json:"Exception,omitempty"`

		// InnerExceptions InnerExceptions
		InnerExceptions *string `json:"InnerExceptions,omitempty"`

		// IsSoftError SoftError if true indicates this is not actually an exception but an UI warning popup.
		IsSoftError *bool `json:"IsSoftError,omitempty"`

		// Message Error message for failure response. By default it is 'null'
		Message *string `json:"Message,omitempty"`

		// MessageID Message Id for failure response. By default it is 'null'
		MessageID *string `json:"MessageID,omitempty"`

		// Result The result for the API call.
		Result *string `json:"Result,omitempty"`

		// Success It will be true for a successful API call.
		Success *bool `json:"success,omitempty"`
	} `json:"Result,omitempty"`
}

// SecurityStartAuthentication defines model for SecurityStartAuthentication.
type SecurityStartAuthentication struct {
	ErrorCode       *string `json:"ErrorCode,omitempty"`
	ErrorID         *string `json:"ErrorID,omitempty"`
	Exception       *string `json:"Exception,omitempty"`
	InnerExceptions *string `json:"InnerExceptions,omitempty"`
	IsSoftError     *bool   `json:"IsSoftError,omitempty"`
	Message         *string `json:"Message,omitempty"`
	MessageID       *string `json:"MessageID,omitempty"`
	Result          *struct {
		AllowLoginMfaCache *bool `json:"AllowLoginMfaCache,omitempty"`
		Challenges         *[]struct {
			Mechanisms *[]struct {
				AnswerType       *string `json:"AnswerType,omitempty"`
				Enrolled         *bool   `json:"Enrolled,omitempty"`
				MechanismId      *string `json:"MechanismId,omitempty"`
				Name             *string `json:"Name,omitempty"`
				PromptMechChosen *string `json:"PromptMechChosen,omitempty"`
				PromptSelectMech *string `json:"PromptSelectMech,omitempty"`
			} `json:"Mechanisms,omitempty"`
		} `json:"Challenges,omitempty"`
		ClientHints *struct {
			AllowForgotPassword           *bool `json:"AllowForgotPassword,omitempty"`
			AllowPersist                  *bool `json:"AllowPersist,omitempty"`
			EndpointAuthenticationEnabled *bool `json:"EndpointAuthenticationEnabled,omitempty"`
			PersistDefault                *bool `json:"PersistDefault,omitempty"`
		} `json:"ClientHints,omitempty"`
		EventDescription  *string `json:"EventDescription,omitempty"`
		RetryWaitingTime  *int32  `json:"RetryWaitingTime,omitempty"`
		SecurityImageName *string `json:"SecurityImageName,omitempty"`
		SessionId         *string `json:"SessionId,omitempty"`
		Summary           *string `json:"Summary,omitempty"`
		TenantId          *string `json:"TenantId,omitempty"`
		Version           *string `json:"Version,omitempty"`
	} `json:"Result,omitempty"`
	Success *bool `json:"success,omitempty"`
}

// SecurityStartChallenge defines model for SecurityStartChallenge.
type SecurityStartChallenge struct {
	// Error Error message text on failure, may be null
	Error *map[string]interface{} `json:"Error,omitempty"`

	// Result The below is the response received from the CyberArk Identity when the request to the API is successful.
	Result *struct {
		// AllowLoginMfaCache Allows login MFA cache
		AllowLoginMfaCache *bool `json:"AllowLoginMfaCache,omitempty"`

		// Challenges The challenges consist of an array of MFA mechanisms out of which at least one MFA mechanism should be satisfied by the user to proceed further.
		Challenges *struct {
			// Mechanisms The list of MFA mechanisms that a user should select and respond
			Mechanisms *struct {
				// AnwerType The answer type for the given mechanism. Ex: If the mechanism is password, AnswerType would be Answer and If the mechanism is email, AnswerType would be startOOB
				AnwerType *string `json:"AnwerType,omitempty"`

				// MechanismId This is a random generated ID that is used to identify the mechanism uniquely. This ID is provided in the request body for advance authentication API.
				MechanismId *string `json:"MechanismId,omitempty"`

				// Name The name of the MFA mechanism Ex: The name of the password mechanism is UP
				Name *string `json:"Name,omitempty"`

				// PromptMechChosen Prompt for the chosen mechanism. Ex: If the chosen mechanism is Password then then this field would have the value Enter password on the UI.
				PromptMechChosen *string `json:"PromptMechChosen,omitempty"`

				// PromptSelectMech Prompt for the selected mechanism. Ex: If the selected mechanism is Password then then this field would have the value Password on the UI.
				PromptSelectMech *string `json:"PromptSelectMech,omitempty"`
			} `json:"Mechanisms,omitempty"`
		} `json:"Challenges,omitempty"`

		// ClientHints These client hints are displayed on the login form to the user.
		ClientHints *struct {
			// AllowForgotPassword This Boolean flag specifies whether the user should be displayed with forgot password link
			AllowForgotPassword *bool `json:"AllowForgotPassword,omitempty"`

			// AllowPersist Allow Persistent cookies
			AllowPersist *bool `json:"AllowPersist,omitempty"`

			// EndpointAuthenticationEnabled This Boolean flag specifies whether the endpoint authentication is enabled for the user.
			EndpointAuthenticationEnabled *bool `json:"EndpointAuthenticationEnabled,omitempty"`

			// PersistDefault Persist Default
			PersistDefault *bool `json:"PersistDefault,omitempty"`
		} `json:"ClientHints,omitempty"`

		// ErrorCode ErrorCode
		ErrorCode *string `json:"ErrorCode,omitempty"`

		// ErrorID ErrorID
		ErrorID *string `json:"ErrorID,omitempty"`

		// EventDescription EventDescription
		EventDescription *string `json:"EventDescription,omitempty"`

		// Exception Exception
		Exception *string `json:"Exception,omitempty"`

		// InnerExceptions InnerExceptions
		InnerExceptions *string `json:"InnerExceptions,omitempty"`

		// IsSoftError IsSoftError
		IsSoftError *string `json:"IsSoftError,omitempty"`

		// Message Message
		Message *string `json:"Message,omitempty"`

		// MessageID MessageID
		MessageID *string `json:"MessageID,omitempty"`

		// RetryWaitingTime Retry waiting time
		RetryWaitingTime *uint64 `json:"RetryWaitingTime,omitempty"`

		// SessionId This is a random generated ID that is used to identify the user session uniquely. This ID is provided in the request body for advance authentication API.
		SessionId *string `json:"SessionId,omitempty"`

		// Summary Summary
		Summary *string `json:"Summary,omitempty"`

		// TenantId The ID of the tenant to which the user is logging in. If this field is not provided, the username must identify the tenant. Ex: abc-123
		TenantId *string `json:"TenantId,omitempty"`

		// Version Version of the API Ex: v1.0
		Version *string `json:"Version,omitempty"`

		// Success success
		Success *bool `json:"success,omitempty"`
	} `json:"Result,omitempty"`
}

// SecurityStartForgotUsername defines model for SecurityStartForgotUsername.
type SecurityStartForgotUsername struct {
	// Error Error message text on failure, below message, would be returned if payload key version provided is invalid/empty
	Error *struct {
		// EmptyVersion Authentication (login or challenge) has failed. Please try again or contact your system administrator.
		EmptyVersion *string `json:"EmptyVersion,omitempty"`

		// InvalidVersion Authentication (login or challenge) has failed. Please try again or contact your system administrator.
		InvalidVersion *string `json:"InvalidVersion,omitempty"`
	} `json:"Error,omitempty"`

	// Result Return object for a successful API call
	Result *struct {
		// ErrorCode Error code if any error is received from the API. By default, it is 'null'
		ErrorCode *string `json:"ErrorCode,omitempty"`

		// ErrorID Error ID if any error is received from the API. By default, it is 'null'
		ErrorID *string `json:"ErrorID,omitempty"`

		// Exception Exception message if an exception is received from the API. By default, it is 'null'
		Exception *string `json:"Exception,omitempty"`

		// InnerExceptions Inner Exceptions if any received from the API. By default, it is 'null'
		InnerExceptions *string `json:"InnerExceptions,omitempty"`

		// IsSoftError SoftError if true indicates this is not an exception but a UI warning popup
		IsSoftError *bool `json:"IsSoftError,omitempty"`

		// Message Error message for failure response. By default it is 'null'
		Message *string `json:"Message,omitempty"`

		// MessageID Message Id for failure response. By default it is 'null'
		MessageID *string `json:"MessageID,omitempty"`

		// Result An Authentication package to guide client through the Forgot Username MFA proces
		Result *struct {
			// AllowLoginMfaCache Boolean flag indicating if login MFA cache allowed or not
			AllowLoginMfaCache *bool `json:"AllowLoginMfaCache,omitempty"`

			// Challenges The challenges consist of an array of MFA mechanisms out of which at least one MFA mechanism should be satisfied by the user to proceed further
			Challenges *struct {
				// Mechanisms The list of MFA mechanisms that a user should select and respond
				Mechanisms *struct {
					// AnwerType The answer type for the given mechanism. Ex: If the mechanism is the password, AnswerType would be Text
					AnwerType *string `json:"AnwerType,omitempty"`

					// MechanismId This is a randomly generated ID that is used to identify the mechanism uniquely. This ID is provided in the request body for advance forgot username API
					MechanismId *string `json:"MechanismId,omitempty"`

					// Name The name of the MFA mechanism specifying the information the user needs to provide
					Name *string `json:"Name,omitempty"`

					// ServiceName Name of the following endpoint to invoke to advance the process and send the user an email with their username
					ServiceName *string `json:"ServiceName,omitempty"`
				} `json:"Mechanisms,omitempty"`
			} `json:"Challenges,omitempty"`

			// ClientHints These client hints are displayed on the login form to the user
			ClientHints *struct {
				// AllowForgotPassword This Boolean flag specifies whether the user should be displayed with forgot password link
				AllowForgotPassword *bool `json:"AllowForgotPassword,omitempty"`

				// AllowPersist Allow Persistent cookies
				AllowPersist *bool `json:"AllowPersist,omitempty"`

				// EndpointAuthenticationEnabled This Boolean flag specifies whether the endpoint authentication is enabled for the user
				EndpointAuthenticationEnabled *bool `json:"EndpointAuthenticationEnabled,omitempty"`

				// PersistDefault Persist Default
				PersistDefault *bool `json:"PersistDefault,omitempty"`
			} `json:"ClientHints,omitempty"`

			// EventDescription EventDescription
			EventDescription *string `json:"EventDescription,omitempty"`

			// RetryWaitingTime Time limit after which API can be tried again
			RetryWaitingTime *uint64 `json:"RetryWaitingTime,omitempty"`

			// SessionId This is a randomly generated ID used to identify the user session uniquely. This ID is provided in the request body for advance authentication API
			SessionId *string `json:"SessionId,omitempty"`

			// Summary Summary of the result
			Summary *string `json:"Summary,omitempty"`

			// TenantId The ID of the tenant to which the user is logging in. If this field is not provided, the username must identify the tenant. Ex: ABC-123
			TenantId *string `json:"TenantId,omitempty"`

			// Version Version of the API Ex: v1.0
			Version *string `json:"Version,omitempty"`
		} `json:"Result,omitempty"`

		// Success It will be true for a successful API call
		Success *bool `json:"success,omitempty"`
	} `json:"Result,omitempty"`
}

// SecurityStartQRCodeAuthentication defines model for SecurityStartQRCodeAuthentication.
type SecurityStartQRCodeAuthentication struct {
	// Error Error message text on failure, may be null
	Error *map[string]interface{} `json:"Error,omitempty"`

	// Result Login success (or error) message or an Authentication package to guide client through the MFA process.
	Result *map[string]interface{} `json:"Result,omitempty"`
}

// SecurityStartSocialAuthentication defines model for SecurityStartSocialAuthentication.
type SecurityStartSocialAuthentication struct {
	// Error Error message text on failure
	Error *struct {
		// InvalidURI Redirect URI found in the request is not trusted or valid.
		InvalidURI *string `json:"InvalidURI,omitempty"`

		// UnknownIdp Encountered unexpected error and could not process authentication request.
		UnknownIdp *string `json:"UnknownIdp,omitempty"`
	} `json:"Error,omitempty"`

	// Result Provides status whether social authentication started or not
	Result *struct {
		// ErrorCode ErrorID
		ErrorCode *string `json:"ErrorCode,omitempty"`

		// ErrorID ErrorID
		ErrorID *string `json:"ErrorID,omitempty"`

		// InnerExceptions ErrorID
		InnerExceptions *string `json:"InnerExceptions,omitempty"`

		// IsSoftError ErrorID
		IsSoftError *string `json:"IsSoftError,omitempty"`

		// Message Message
		Message *string `json:"Message,omitempty"`

		// MessageID MessageID
		MessageID *string `json:"MessageID,omitempty"`

		// Result Result
		Result *struct {
			// IdpRedirectUrl Idp Redirect Url
			IdpRedirectUrl *string `json:"IdpRedirectUrl,omitempty"`

			// Status Status of the endpoint
			Status *string `json:"Status,omitempty"`
		} `json:"Result,omitempty"`

		// Success success
		Success *bool `json:"success,omitempty"`
	} `json:"Result,omitempty"`
}

// SecuritySubmitOathOtpCode defines model for SecuritySubmitOathOtpCode.
type SecuritySubmitOathOtpCode struct {
	// Error Error message text on failure, may be null
	Error *map[string]interface{} `json:"Error,omitempty"`

	// Result Standard JSON response.
	Result *map[string]interface{} `json:"Result,omitempty"`
}

// SecuritySubmitQRCode defines model for SecuritySubmitQRCode.
type SecuritySubmitQRCode struct {
	// Error Error message text on failure, may be null
	Error *map[string]interface{} `json:"Error,omitempty"`

	// Result Standard JSON response.
	Result *map[string]interface{} `json:"Result,omitempty"`
}

// U2fAnswerRegistrationChallenge defines model for U2fAnswerRegistrationChallenge.
type U2fAnswerRegistrationChallenge struct {
	// Error Standard JSON response.
	Error *map[string]interface{} `json:"Error,omitempty"`

	// Result Standard JSON response.
	Result *map[string]interface{} `json:"Result,omitempty"`
}

// UnauthorizedUserError defines model for Unauthorized_user_error.
type UnauthorizedUserError struct {
	// Result The API response when invalid request is sent to the server.
	Result *struct {
		// UnauthorizedUser The user is not an authorized user. Either the user has not logged in or the user doesn't have rights to perform the request.
		//
		// <b>Example:</b>
		// "error_message": "You do not have access to this content. Please contact your system administrator for assistance."
		UnauthorizedUser *string `json:"Unauthorized user,omitempty"`
	} `json:"Result,omitempty"`
}

// UserMgmtSignOutCurrentSession defines model for UserMgmtSignOutCurrentSession.
type UserMgmtSignOutCurrentSession struct {
	// Error Error message text on failure.
	Error *struct {
		// Unauthorized This error message is displayed when there some error occurred. Error message: 'Please try again or contact your system administrator for assistance.'
		Unauthorized *string `json:"Unauthorized,omitempty"`
	} `json:"Error,omitempty"`

	// Result Return object for a successful API call.
	Result *struct {
		// ErrorCode Error code if any error is received from the API. By default it is 'null'
		ErrorCode *string `json:"ErrorCode,omitempty"`

		// ErrorID Error ID if any error is received from the API. By default it is 'null'
		ErrorID *string `json:"ErrorID,omitempty"`

		// Exception Exception message if any exception is received from the API. By default it is 'null'
		Exception *string `json:"Exception,omitempty"`

		// InnerExceptions InnerExceptions
		InnerExceptions *string `json:"InnerExceptions,omitempty"`

		// IsSoftError SoftError if true indicates this is not actually an exception but an UI warning popup.
		IsSoftError *bool `json:"IsSoftError,omitempty"`

		// Message Error message for failure response. By default it is 'null'
		Message *string `json:"Message,omitempty"`

		// MessageID Message Id for failure response. By default it is 'null'
		MessageID *string `json:"MessageID,omitempty"`

		// Result The result for the API call.
		Result *string `json:"Result,omitempty"`

		// Success It will be true for a successful API call.
		Success *bool `json:"success,omitempty"`
	} `json:"Result,omitempty"`
}

// UserMgmtSignOutEverywhere defines model for UserMgmtSignOutEverywhere.
type UserMgmtSignOutEverywhere struct {
	// Error Error message text on failure.
	Error *struct {
		// UnAuthorized This error message is displayed when the invalid user Id is provided or when user does not have sufficient rights. Error message: 'You are not authorized to perform this operation. Please contact your IT helpdesk.'
		UnAuthorized *string `json:"UnAuthorized,omitempty"`
	} `json:"Error,omitempty"`

	// Result Return object for a successful API call.
	Result *struct {
		// ErrorCode Error code if any error is received from the API. By default it is 'null'
		ErrorCode *string `json:"ErrorCode,omitempty"`

		// ErrorID Error ID if any error is received from the API. By default it is 'null'
		ErrorID *string `json:"ErrorID,omitempty"`

		// Exception Exception message if any exception is received from the API. By default it is 'null'
		Exception *string `json:"Exception,omitempty"`

		// InnerExceptions InnerExceptions
		InnerExceptions *string `json:"InnerExceptions,omitempty"`

		// IsSoftError SoftError if true indicates this is not actually an exception but an UI warning popup.
		IsSoftError *bool `json:"IsSoftError,omitempty"`

		// Message Error message for failure response. By default it is 'null'
		Message *string `json:"Message,omitempty"`

		// MessageID Message Id for failure response. By default it is 'null'
		MessageID *string `json:"MessageID,omitempty"`

		// Result The result for the API call.
		Result *string `json:"Result,omitempty"`

		// Success It will be true for a successful API call.
		Success *bool `json:"success,omitempty"`
	} `json:"Result,omitempty"`
}

// PostCoreGetAssignedAdministrativeRightsParams defines parameters for PostCoreGetAssignedAdministrativeRights.
type PostCoreGetAssignedAdministrativeRightsParams struct {
	// Role Unique ID of the Role Ex: 4b103f3c_4824_48f8_ab94_0c353203d5b7
	Role string `form:"role" json:"role"`
}

// PostOAuth2AuthorizeAppIdParams defines parameters for PostOAuth2AuthorizeAppId.
type PostOAuth2AuthorizeAppIdParams struct {
	// Scope The scopes for which the authorization is requested. The scopes can be space separated. The scopes can be used to defined the <a href="https://identity-developer.cyberark.com/docs/api-scopes"> APIs </a>  and the <a href="https://identity-developer.cyberark.com/docs/claims"> claims </a> information that the client application can access <b>Note:</b> 'OpenID' scope is required to get ID token.
	Scope string `form:"scope" json:"scope"`

	// RedirectUri The callback URI to which the user gets redirected along with the authorization code or tokens. The redirect URI must be in the list of authorized redirect URIs.
	RedirectUri string `form:"redirect_uri" json:"redirect_uri"`

	// Prompt Space delimited, case-sensitive list of ASCII string values that specifies whether the authorization server prompts the End-User for reauthentication and consent.
	// CyberArk Identity supports the following values:
	//        1. <b>none</b>: An error is returned if an End-User is not already authenticated.
	//        2. <b>login</b>:  CyberArk Identity prompts the End-User for reauthentication. If the user cannot be reauthenticated, an error is returned.
	Prompt *string `form:"prompt,omitempty" json:"prompt,omitempty"`

	// CodeChallengeMethod The method used to derive the ‘code challenge’ using the ‘code verifier.’ This param is only applicable for PKCE flow.
	CodeChallengeMethod *string `form:"code_challenge_method,omitempty" json:"code_challenge_method,omitempty"`

	// CodeChallenge It is derived from the <a href=https://identity-developer.cyberark.com/docs/authorization-code-flow-with-pkce#code-verifier-and-code-challenge> code verifier </a>.  This param is only applicable for PKCE flow.
	CodeChallenge *string `form:"code_challenge,omitempty" json:"code_challenge,omitempty"`

	// ClientId The client ID is the unique ID that CyberArk Identity issues to the client application.
	ClientId string `form:"client_id" json:"client_id"`

	// ClientSecret A unique code that an authorization service issues when the service registers the application. You can think of it as the password for the client application.
	ClientSecret *string `form:"client_secret,omitempty" json:"client_secret,omitempty"`

	// ResponseType The response type determines the grant type of OAuth / OpenID Connect. CyberArk Identity supports the following grant types:
	//     <b>1. Authorization code flow (with/without PKCE):</b> code
	//     <b>2. Implicit flow:</b> id_token; token id_token
	//     <b>3. Hybrid flow:</b> code token id_token; code token; code id_token
	ResponseType string `form:"response_type" json:"response_type"`

	// State The Client should use the content of this parameter to make sure the Code it received matches the authorization request it sent.
	State *string `form:"state,omitempty" json:"state,omitempty"`
}

// PostOAuth2ConfirmAppIdParams defines parameters for PostOAuth2ConfirmAppId.
type PostOAuth2ConfirmAppIdParams struct {
	// Bounce This value determines if the user has been authenticated or not. The value can be found in the  <a href="https://identity-developer.cyberark.com/reference/post_oauth2-authorize-app-id-">login redirect URI</a> sent as a response to the authorization request.
	Bounce string `form:"bounce" json:"bounce"`

	// Result Approve / deny the request. This parameter takes two values: 0, 1 (1 - approve, 0- deny). The default value is 0.
	Result *int `form:"result,omitempty" json:"result,omitempty"`

	// Scopes Comma delimited list of approved scopes prompted for consent.
	Scopes string `form:"scopes" json:"scopes"`

	// DeniedScopes Comma delimited list of denied scopes prompted for consent.
	DeniedScopes string `form:"deniedScopes" json:"deniedScopes"`
}

// PostOAuth2EndSessionAppIdParams defines parameters for PostOAuth2EndSessionAppId.
type PostOAuth2EndSessionAppIdParams struct {
	// PostLogoutRedirectUri The redirect URI to which the user will be redirected to after logout from CyberArk Identity.
	PostLogoutRedirectUri *string `form:"post_logout_redirect_uri,omitempty" json:"post_logout_redirect_uri,omitempty"`

	// State An optional value that is returned as a query parameter during the redirect to the post_logout_redirect_uri. The value can be used by the client application to validate the redirect.
	State *string `form:"state,omitempty" json:"state,omitempty"`

	// IdTokenHint An optional value where a valid Id token should be passed with a subject that matches the current session. Its recommended when requesting post-logout redirection.
	IdTokenHint *string `form:"id_token_hint,omitempty" json:"id_token_hint,omitempty"`
}

// PostOAuth2GetMetaParams defines parameters for PostOAuth2GetMeta.
type PostOAuth2GetMetaParams struct {
	// ServiceName Application ID of the OpenID Connect custom app.
	ServiceName string `form:"serviceName" json:"serviceName"`
}

// PostOAuth2IntrospectAppIdFormdataBody defines parameters for PostOAuth2IntrospectAppId.
type PostOAuth2IntrospectAppIdFormdataBody struct {
	// Token Token can be access/ ID / refresh token. Ex: abcdefyhuk23fj4j5b4
	Token string `form:"token" json:"token"`
}

// PostOAuth2RevokeAppIdFormdataBody defines parameters for PostOAuth2RevokeAppId.
type PostOAuth2RevokeAppIdFormdataBody struct {
	// Token Access / ID token returned from token endpoint Ex: abhdb...
	Token string `form:"token" json:"token"`
}

// PostOAuth2TokenAppIdFormdataBody defines parameters for PostOAuth2TokenAppId.
type PostOAuth2TokenAppIdFormdataBody struct {
	// ClientId The client ID is the unique ID that CyberArk Identity issues to the client application.
	ClientId string `form:"client_id" json:"client_id"`

	// ClientSecret A unique code that an authorization service issues when the service registers the application.  You can think of it as the password for the client application.
	ClientSecret *string `form:"client_secret,omitempty" json:"client_secret,omitempty"`

	// Code Authorization code sent with Redirect URI.
	Code string `form:"code" json:"code"`

	// CodeVerifier <a href="https://identity-developer.cyberark.com/docs/authorization-code-flow-with-pkce#code-verifier-and-code-challenge"> Code verifier </a>  is a high-entropy cryptographic random STRING. </a> This is used for only PKCE flow.
	CodeVerifier *string `form:"code_verifier,omitempty" json:"code_verifier,omitempty"`

	// GrantType The OAuth/OIDC grant type. CyberArk Identity supports the following grant types:
	// 1. authorization_code: Refers to authorization code flow (with/without PKCE) and hybrid flow
	// 2. client_credentials: Refers to client credentials flow
	// 3. password: refers to ROPG flow
	// 4. refresh_token: Used to refresh an access token
	GrantType string `form:"grant_type" json:"grant_type"`

	// Nonce The string value is used to associate a client session with an access token and to mitigate replay attacks.  The value is passed through unmodified from the Authentication Request to the access Token.  If present in the access Token, Clients must verify that the nonce Claim Value equals the value of the nonce parameter sent in the Authentication Request.
	Nonce *string `form:"nonce,omitempty" json:"nonce,omitempty"`

	// RedirectUri The callback URI to which the user gets redirected along with the authorization code or tokens.  The redirect URI must be in the list of authorized redirect URIs.
	RedirectUri string `form:"redirect_uri" json:"redirect_uri"`

	// State The Client should use the content of this parameter to make sure the Code it received matches the authorization request it sent.
	State *string `form:"state,omitempty" json:"state,omitempty"`
}

// PostRolesAssignSuperRightsJSONBody defines parameters for PostRolesAssignSuperRights.
type PostRolesAssignSuperRightsJSONBody struct {
	// Path Path of the file that defines the library file that will assign a specific right. Ex: /lib/rights/reportman.json
	Path string `json:"Path"`

	// Role The unique ID of the Role. The unique ID is generated when the role is created. Ex: 612e41e0-0d6c-46d3-ad55-c3a28afa26yh
	Role string `json:"Role"`
}

// PostRolesGetRoleParams defines parameters for PostRolesGetRole.
type PostRolesGetRoleParams struct {
	// Name Role UUID
	Name string `form:"Name" json:"Name"`

	// SuppressPrincipalsList If true, the principals list will not be included (may make this call much faster)
	SuppressPrincipalsList *string `form:"SuppressPrincipalsList,omitempty" json:"SuppressPrincipalsList,omitempty"`

	// GetRights If true, the get effective right for current user
	GetRights *string `form:"getRights,omitempty" json:"getRights,omitempty"`
}

// PostRolesGetRoleMembersParams defines parameters for PostRolesGetRoleMembers.
type PostRolesGetRoleMembersParams struct {
	// Name Pass Unique Id of the Role Ex: 612e41e0-0d6c-46d3-ad55-c3a28afa26yh
	Name string `form:"name" json:"name"`
}

// PostRolesSetDynamicRoleScriptJSONBody defines parameters for PostRolesSetDynamicRoleScript.
type PostRolesSetDynamicRoleScriptJSONBody struct {
	// ID ID of the role to create or update
	ID string `json:"ID"`

	// Script Javascript which returns a boolean value
	Script string `json:"Script"`
}

// PostRolesStoreRoleJSONBody defines parameters for PostRolesStoreRole.
type PostRolesStoreRoleJSONBody struct {
	// Description A brief description about the role.
	Description *string `json:"Description,omitempty"`

	// Groups A list of unique IDs or names of the groups to be added to the role. For example, 3cc....b1.
	Groups *[]map[string]interface{} `json:"Groups,omitempty"`

	// Name The role name. For example, "samplerole".
	Name string `json:"Name"`

	// OrgPath Organization Name
	OrgPath *string `json:"OrgPath,omitempty"`

	// RoleType Type of the Role Cyberark identity supports the following role types:<br> PrincipalList: Create a role of static type<br> Script: Create a role of dynamic type<br> Everybody: Create a role of type that matches all the authenticated users
	RoleType *string `json:"RoleType,omitempty"`

	// Roles A list of unique IDs or names of the roles to be added to the role. For example, 3cc....b1.
	Roles *[]map[string]interface{} `json:"Roles,omitempty"`

	// Users A list of unique IDs or names of the user to be added to the role. For example, 3cc....b1.
	Users *[]map[string]interface{} `json:"Users,omitempty"`
}

// PostRolesTestDynamicRoleScriptJSONBody defines parameters for PostRolesTestDynamicRoleScript.
type PostRolesTestDynamicRoleScriptJSONBody struct {
	// Script Script to test
	Script string `json:"Script"`

	// User ID of the user object for testing the script
	User string `json:"User"`
}

// PostRolesUnAssignSuperRightsJSONBody defines parameters for PostRolesUnAssignSuperRights.
type PostRolesUnAssignSuperRightsJSONBody struct {
	// Path Path of the file that defines the library file that will unassign a specific right. Ex: /lib/rights/reportman.json
	Path string `json:"Path"`

	// Role The unique ID of the Role. The unique ID is generated when the Role is created. Ex: 612e41e0-0d6c-46d3-ad55-c3a28afa26yh
	Role string `json:"Role"`
}

// PostRolesUpdateRoleJSONBody defines parameters for PostRolesUpdateRole.
type PostRolesUpdateRoleJSONBody struct {
	// Groups Specify Groupnames or Group Unique Id for the members to add or delete for the role
	Groups *struct {
		// Add Array of group's Unique Id. Ex: c2c1698f_08f3_4c69_8774_6233c1996578
		Add *[]string `json:"Add,omitempty"`

		// Delete Array of group's Unique Id Ex: c2c1698f_08f3_4c69_8774_6233c1996578
		Delete *[]string `json:"Delete,omitempty"`
	} `json:"Groups,omitempty"`

	// Name The unique ID of the Role. The unique ID is generated when the user is created. Ex: 79d63967_9b6d_467b_9fc8_d5db6ce32012
	Name string `json:"Name"`

	// Roles Specify Rolenames or Role Unique Id for the members to add or delete for the role
	Roles *struct {
		// Add Array of role's Unique Id. Ex: 2bbe197f-ed05-496d-8e7a-1b918adebe38
		Add *[]string `json:"Add,omitempty"`

		// Delete Array of role's Unique Id Ex: 2bbe197f-ed05-496d-8e7a-1b918adebe38
		Delete *[]string `json:"Delete,omitempty"`
	} `json:"Roles,omitempty"`

	// Users Specify Usernames or User Unique Id for the members to add or delete for the role
	Users struct {
		// Add Array of user's Unique Id. Ex: 2bbe197f-ed05-496d-8e7a-1b918adebe38
		Add *[]string `json:"Add,omitempty"`

		// Delete Array of user's Unique Id. Ex: 2bbe197f-ed05-496d-8e7a-1b918adebe38
		Delete *[]string `json:"Delete,omitempty"`
	} `json:"Users"`
}

// PostSaasManageAddUsersAndGroupsToRoleJSONBody defines parameters for PostSaasManageAddUsersAndGroupsToRole.
type PostSaasManageAddUsersAndGroupsToRoleJSONBody struct {
	// Groups The unique ID of the Group or Group Names to add for the role Ex: c2c1698f_08f3_4c69_8774_6233c1996578
	Groups *[]map[string]interface{} `json:"Groups,omitempty"`

	// Name The unique ID of the Role. The unique ID is generated when the Role is created. Ex: 612e41e0-0d6c-46d3-ad55-c3a28afa26yh
	Name string `json:"Name"`

	// Roles The unique ID of the Role or Role Names to add for the role Ex: 3d6093ff_0217_4e50_8353_82c5ac732363
	Roles *[]map[string]interface{} `json:"Roles,omitempty"`

	// Users List of unique ID of the User or User Names to add for the role Ex: ea5e3538-71ac-4b41-a0b7-c5b4a5b23f05
	Users *[]map[string]interface{} `json:"Users,omitempty"`
}

// PostSaasManageDeleteRolesJSONBody defines parameters for PostSaasManageDeleteRoles.
type PostSaasManageDeleteRolesJSONBody struct {
	// Roles Pass list of Unique Id's of the Roles Ex: 612e41e0-0d6c-46d3-ad55-c3a28afa26yh
	Roles []map[string]interface{} `json:"Roles"`
}

// PostSaasManageGetRoleAppsParams defines parameters for PostSaasManageGetRoleApps.
type PostSaasManageGetRoleAppsParams struct {
	// Role Pass Unique ID or name of the Role Ex: 79d63967_9b6d_467b_9fc8_d5db6ce32099
	Role string `form:"role" json:"role"`
}

// PostSaasManageRemoveUsersAndGroupsFromRoleJSONBody defines parameters for PostSaasManageRemoveUsersAndGroupsFromRole.
type PostSaasManageRemoveUsersAndGroupsFromRoleJSONBody struct {
	// Groups The unique ID of the Group or Group Names to remove from the role Ex: c2c1698f_08f3_4c69_8774_6233c1996578
	Groups *[]map[string]interface{} `json:"Groups,omitempty"`

	// Name The unique ID of the Role. The unique ID is generated when the Role is created. Ex: 612e41e0-0d6c-46d3-ad55-c3a28afa26yh
	Name string `json:"Name"`

	// Roles List of the unique ID of the Roles or Role Names to remove from the role Ex: 3d6093ff_0217_4e50_8353_82c5ac732363
	Roles *[]map[string]interface{} `json:"Roles,omitempty"`

	// Users List of the unique ID of the Users or User Names to remove from the role Ex: ea5e3538-71ac-4b41-a0b7-c5b4a5b24f05
	Users *[]map[string]interface{} `json:"Users,omitempty"`
}

// PostSecurityAdvanceAuthenticationJSONBody defines parameters for PostSecurityAdvanceAuthentication.
type PostSecurityAdvanceAuthenticationJSONBody struct {
	// Action Depending on the type of mechanism you are advancing, use one of the following actions:
	// * `Answer` (advance an in-band or answerable OOB mechanism)
	// * `StartOOB` (initiate an out-of-band mechanism)
	// * `Poll` (wait for a user to pass or fail an OOB mechanism)
	// * `ForgotPassword`
	// * `RetryOOB`
	Action string `json:"Action"`

	// Answer The user-provided value used to advance in-band or answerable OOB mechanisms. For example, a password or OTP.
	Answer *string `json:"Answer,omitempty"`

	// MechanismId The ID of the mechanism you are advancing. Provided in the [/Security/StartAuthentication](openapi/identity_merged_files/Authentication&Authorization.yaml/paths/~1Security~1StartAuthentication/post) response.
	MechanismId string `json:"MechanismId"`

	// PersistentLogin This flag indicates whether the session should persist after the user closes the browser.
	PersistentLogin *bool `json:"PersistentLogin,omitempty"`

	// SessionId The ID of the authentication session in which the mechanism was created. Provided in the [/Security/StartAuthentication](openapi/identity_merged_files/Authentication&Authorization.yaml/paths/~1Security~1StartAuthentication/post) response.
	SessionId string `json:"SessionId"`

	// TenantId The ID of the tenant to which the user is authenticating. This value should be consistent with the tenant used in the [/Security/StartAuthentication](openapi/identity_merged_files/Authentication&Authorization.yaml/paths/~1Security~1StartAuthentication/post).
	TenantId *string `json:"TenantId,omitempty"`
}

// PostSecurityAdvanceForgotUsernameJSONBody defines parameters for PostSecurityAdvanceForgotUsername.
type PostSecurityAdvanceForgotUsernameJSONBody struct {
	// Action The payload key action
	Action string `json:"Action"`

	// Answer For mechanism that need to be answered such as password, security code, etc., provide the answer in this field
	Answer string `json:"Answer"`

	// MechanismId Mechanism ID received as a response to the start forgot username API
	MechanismId string `json:"MechanismId"`

	// PersistentLogin Flag indicating if the user's session should persist after closing the browser
	PersistentLogin string `json:"PersistentLogin"`

	// SessionId Session ID received as a response to the start forgot username API
	SessionId string `json:"SessionId"`

	// TenantId Tenant ID received as a response to the start forgot username API
	TenantId string `json:"TenantId"`
}

// PostSecurityAnswerOOBChallengeJSONBody defines parameters for PostSecurityAnswerOOBChallenge.
type PostSecurityAnswerOOBChallengeJSONBody = map[string]interface{}

// PostSecurityAnswerOOBChallengeParams defines parameters for PostSecurityAnswerOOBChallenge.
type PostSecurityAnswerOOBChallengeParams struct {
	// Answer The answer contained within the out-of-band message or link
	Answer string `form:"answer" json:"answer"`
}

// PostSecurityChallengeUserParams defines parameters for PostSecurityChallengeUser.
type PostSecurityChallengeUserParams struct {
	// ProfileName Authentication profile name should be provided which is mapped against the application for which step-up authentication should be triggered.
	ProfileName string `form:"profileName" json:"profileName"`
}

// PostSecurityForgotUsernameJSONBody defines parameters for PostSecurityForgotUsername.
type PostSecurityForgotUsernameJSONBody struct {
	// SearchKey Email address of the user to search for.
	SearchKey string `json:"SearchKey"`
}

// PostSecurityLogoutJSONBody defines parameters for PostSecurityLogout.
type PostSecurityLogoutJSONBody = map[string]interface{}

// PostSecurityLogoutParams defines parameters for PostSecurityLogout.
type PostSecurityLogoutParams struct {
	// RedirectUrl It is the URL to redirect the user after the logout.
	RedirectUrl *string `form:"redirectUrl,omitempty" json:"redirectUrl,omitempty"`

	// AllowIWA Specifies whether to allow windows authentication or not. By default it is false.
	AllowIWA *string `form:"allowIWA,omitempty" json:"allowIWA,omitempty"`
}

// PostSecurityStartAuthenticationJSONBody defines parameters for PostSecurityStartAuthentication.
type PostSecurityStartAuthenticationJSONBody struct {
	// TenantId The ID of the tenant to which the user is signing in.
	// If this field is not provided, either the username's [login suffix](openapi/identity_merged_files/TenantManagement.yaml/paths/~1Core~1GetAliasesForTenant/post) or the request URL itself must identify the tenant.
	TenantId *string `json:"TenantId,omitempty"`

	// User The identifier of the user signing in. <!--Commented out until feature generally available Although the provided value is often a username, the user may specify other identifiers, such as emails or phone numbers, depending on the fields allowed by the tenant's administrators. These fields are configured in the Admin Portal under User Settings. -->
	User string `json:"User"`

	// Version CyberArk Identity API version. `1.0` is the only supported version.
	Version string `json:"Version"`
}

// PostSecurityStartChallengeJSONBody defines parameters for PostSecurityStartChallenge.
type PostSecurityStartChallengeJSONBody struct {
	// ChallengeStateId Challenge Id returned by Challenge user API.
	ChallengeStateId string `json:"ChallengeStateId"`

	// Version Version of the data being sent. Options: 1.0
	Version string `json:"Version"`
}

// PostSecurityStartForgotUsernameJSONBody defines parameters for PostSecurityStartForgotUsername.
type PostSecurityStartForgotUsernameJSONBody struct {
	// Version The payload key version
	Version string `json:"Version"`
}

// PostSecurityStartQRCodeAuthenticationJSONBody defines parameters for PostSecurityStartQRCodeAuthentication.
type PostSecurityStartQRCodeAuthenticationJSONBody struct {
	// Guid The guid to start authentication on.
	Guid string `json:"guid"`
}

// PostSecurityStartQRCodeAuthenticationParams defines parameters for PostSecurityStartQRCodeAuthentication.
type PostSecurityStartQRCodeAuthenticationParams struct {
	// Guid The guid associated to login QR code.
	Guid string `form:"guid" json:"guid"`
}

// PostSecurityStartSocialAuthenticationJSONBody defines parameters for PostSecurityStartSocialAuthentication.
type PostSecurityStartSocialAuthenticationJSONBody struct {
	// IdpName The identity provider name (Facebook, Google, Twitter, LinkedIn, Microsoft).
	IdpName string `json:"IdpName"`

	// PostExtIdpAuthCallbackUrl Where the Idp should send the user after authentication.
	PostExtIdpAuthCallbackUrl string `json:"PostExtIdpAuthCallbackUrl"`
}

// PostSecuritySubmitOathOtpCodeJSONBody defines parameters for PostSecuritySubmitOathOtpCode.
type PostSecuritySubmitOathOtpCodeJSONBody struct {
	// OtpCode OATH One time password.
	OtpCode string `json:"otpCode"`

	// UserUuid Uuid for the authentication user.
	UserUuid string `json:"userUuid"`
}

// PostSecuritySubmitOathOtpCodeParams defines parameters for PostSecuritySubmitOathOtpCode.
type PostSecuritySubmitOathOtpCodeParams struct {
	// OtpCode OATH One time password.
	OtpCode string `form:"otpCode" json:"otpCode"`

	// UserUuid Uuid for the authentication user.
	UserUuid string `form:"userUuid" json:"userUuid"`
}

// PostSecuritySubmitQRCodeJSONBody defines parameters for PostSecuritySubmitQRCode.
type PostSecuritySubmitQRCodeJSONBody = map[string]interface{}

// PostSecuritySubmitQRCodeParams defines parameters for PostSecuritySubmitQRCode.
type PostSecuritySubmitQRCodeParams struct {
	// SessionId The sessionId this QR code mech belongs to.
	SessionId string `form:"sessionId" json:"sessionId"`
}

// PostU2fAnswerRegistrationChallengeJSONBody defines parameters for PostU2fAnswerRegistrationChallenge.
type PostU2fAnswerRegistrationChallengeJSONBody struct {
	// Challenge The registration challenge.
	Challenge string `json:"Challenge"`

	// ClientData The client data.
	ClientData string `json:"ClientData"`

	// RegistrationData The registration data.
	RegistrationData string `json:"RegistrationData"`
}

// PostU2fAnswerRegistrationChallengeParams defines parameters for PostU2fAnswerRegistrationChallenge.
type PostU2fAnswerRegistrationChallengeParams struct {
	// RawRegisterResponse The raw registation response.
	RawRegisterResponse string `form:"rawRegisterResponse" json:"rawRegisterResponse"`
}

// PostUserMgmtSignOutEverywhereParams defines parameters for PostUserMgmtSignOutEverywhere.
type PostUserMgmtSignOutEverywhereParams struct {
	// Id The unique ID of the user who is having access to applications should be provided. The unique ID is generated when the user is created or invited.
	Id string `form:"id" json:"id"`
}

// PostOAuth2IntrospectAppIdFormdataRequestBody defines body for PostOAuth2IntrospectAppId for application/x-www-form-urlencoded ContentType.
type PostOAuth2IntrospectAppIdFormdataRequestBody PostOAuth2IntrospectAppIdFormdataBody

// PostOAuth2RevokeAppIdFormdataRequestBody defines body for PostOAuth2RevokeAppId for application/x-www-form-urlencoded ContentType.
type PostOAuth2RevokeAppIdFormdataRequestBody PostOAuth2RevokeAppIdFormdataBody

// PostOAuth2TokenAppIdFormdataRequestBody defines body for PostOAuth2TokenAppId for application/x-www-form-urlencoded ContentType.
type PostOAuth2TokenAppIdFormdataRequestBody PostOAuth2TokenAppIdFormdataBody

// PostRolesAssignSuperRightsJSONRequestBody defines body for PostRolesAssignSuperRights for application/json ContentType.
type PostRolesAssignSuperRightsJSONRequestBody PostRolesAssignSuperRightsJSONBody

// PostRolesSetDynamicRoleScriptJSONRequestBody defines body for PostRolesSetDynamicRoleScript for application/json ContentType.
type PostRolesSetDynamicRoleScriptJSONRequestBody PostRolesSetDynamicRoleScriptJSONBody

// PostRolesStoreRoleJSONRequestBody defines body for PostRolesStoreRole for application/json ContentType.
type PostRolesStoreRoleJSONRequestBody PostRolesStoreRoleJSONBody

// PostRolesTestDynamicRoleScriptJSONRequestBody defines body for PostRolesTestDynamicRoleScript for application/json ContentType.
type PostRolesTestDynamicRoleScriptJSONRequestBody PostRolesTestDynamicRoleScriptJSONBody

// PostRolesUnAssignSuperRightsJSONRequestBody defines body for PostRolesUnAssignSuperRights for application/json ContentType.
type PostRolesUnAssignSuperRightsJSONRequestBody PostRolesUnAssignSuperRightsJSONBody

// PostRolesUpdateRoleJSONRequestBody defines body for PostRolesUpdateRole for application/json ContentType.
type PostRolesUpdateRoleJSONRequestBody PostRolesUpdateRoleJSONBody

// PostSaasManageAddUsersAndGroupsToRoleJSONRequestBody defines body for PostSaasManageAddUsersAndGroupsToRole for application/json ContentType.
type PostSaasManageAddUsersAndGroupsToRoleJSONRequestBody PostSaasManageAddUsersAndGroupsToRoleJSONBody

// PostSaasManageDeleteRolesJSONRequestBody defines body for PostSaasManageDeleteRoles for application/json ContentType.
type PostSaasManageDeleteRolesJSONRequestBody PostSaasManageDeleteRolesJSONBody

// PostSaasManageRemoveUsersAndGroupsFromRoleJSONRequestBody defines body for PostSaasManageRemoveUsersAndGroupsFromRole for application/json ContentType.
type PostSaasManageRemoveUsersAndGroupsFromRoleJSONRequestBody PostSaasManageRemoveUsersAndGroupsFromRoleJSONBody

// PostSecurityAdvanceAuthenticationJSONRequestBody defines body for PostSecurityAdvanceAuthentication for application/json ContentType.
type PostSecurityAdvanceAuthenticationJSONRequestBody PostSecurityAdvanceAuthenticationJSONBody

// PostSecurityAdvanceForgotUsernameJSONRequestBody defines body for PostSecurityAdvanceForgotUsername for application/json ContentType.
type PostSecurityAdvanceForgotUsernameJSONRequestBody PostSecurityAdvanceForgotUsernameJSONBody

// PostSecurityAnswerOOBChallengeJSONRequestBody defines body for PostSecurityAnswerOOBChallenge for application/json ContentType.
type PostSecurityAnswerOOBChallengeJSONRequestBody = PostSecurityAnswerOOBChallengeJSONBody

// PostSecurityForgotUsernameJSONRequestBody defines body for PostSecurityForgotUsername for application/json ContentType.
type PostSecurityForgotUsernameJSONRequestBody PostSecurityForgotUsernameJSONBody

// PostSecurityLogoutJSONRequestBody defines body for PostSecurityLogout for application/json ContentType.
type PostSecurityLogoutJSONRequestBody = PostSecurityLogoutJSONBody

// PostSecurityStartAuthenticationJSONRequestBody defines body for PostSecurityStartAuthentication for application/json ContentType.
type PostSecurityStartAuthenticationJSONRequestBody PostSecurityStartAuthenticationJSONBody

// PostSecurityStartChallengeJSONRequestBody defines body for PostSecurityStartChallenge for application/json ContentType.
type PostSecurityStartChallengeJSONRequestBody PostSecurityStartChallengeJSONBody

// PostSecurityStartForgotUsernameJSONRequestBody defines body for PostSecurityStartForgotUsername for application/json ContentType.
type PostSecurityStartForgotUsernameJSONRequestBody PostSecurityStartForgotUsernameJSONBody

// PostSecurityStartQRCodeAuthenticationJSONRequestBody defines body for PostSecurityStartQRCodeAuthentication for application/json ContentType.
type PostSecurityStartQRCodeAuthenticationJSONRequestBody PostSecurityStartQRCodeAuthenticationJSONBody

// PostSecurityStartSocialAuthenticationJSONRequestBody defines body for PostSecurityStartSocialAuthentication for application/json ContentType.
type PostSecurityStartSocialAuthenticationJSONRequestBody PostSecurityStartSocialAuthenticationJSONBody

// PostSecuritySubmitOathOtpCodeJSONRequestBody defines body for PostSecuritySubmitOathOtpCode for application/json ContentType.
type PostSecuritySubmitOathOtpCodeJSONRequestBody PostSecuritySubmitOathOtpCodeJSONBody

// PostSecuritySubmitQRCodeJSONRequestBody defines body for PostSecuritySubmitQRCode for application/json ContentType.
type PostSecuritySubmitQRCodeJSONRequestBody = PostSecuritySubmitQRCodeJSONBody

// PostU2fAnswerRegistrationChallengeJSONRequestBody defines body for PostU2fAnswerRegistrationChallenge for application/json ContentType.
type PostU2fAnswerRegistrationChallengeJSONRequestBody PostU2fAnswerRegistrationChallengeJSONBody
